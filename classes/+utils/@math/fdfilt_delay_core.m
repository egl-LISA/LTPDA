% FDFILT_DELAY_CORE core method to implement fractional delay filtering
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% DESCRIPTION: implement fractional delay filtering in the manner of
% "Post-processed time-delay interferometry for LISA" by D.A. Shaddock, et. al.
% (gr-qc 0406106v1)
%
% CALL:        yd = fdfilt_delay_core(y,D,N,w)
%
% INPUTS:      y: input time series
%              D: delay in samples, can be integer or fractional
%              N: kernel length, odd positive integer (Default 51)
%              w: window 'none','blackman','blackman3'(Default), or 'lagrange'
%
% OUTPUTS:     yd = delayed timeseries
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function yd = fdfilt_delay_core(y,D,N,w)
  
  % Changed to fix the integer delay - OJ, 4/10/2017
  % Original code shifted in the wrong direction 
  
  % check if delay is an integer number of samples
  if mod(D,1) == 0
    yd = zeros(size(y));
%     if D < 0      
%       yd(1-D:end,:) = y(1:end+D,:);
%       return
%     else
%       yd(1:end-D,:) = y(D+1:end,:);
%       return
%     end
    if D > 0  
      yd(1+D:end,:) = y(1:end-D,:);
      return
    else
      yd(1:end+D,:) = y(-D+1:end,:);
      return
    end
    
    % otherwise use combination integer and fractional delay
  else
    
    % parse inputs
    if nargin < 4, w = 'blackman3'; end
    if nargin < 3, w = getDefaultWin(); N = numel(w); end
    
    % define k
    k = (-(N-1)/2):1:((N-1)/2);
    
    % build window if necessary
    if isa(w,'char')
      switch lower(w)
        case 'none'
          w = ones(1,N);
        case 'blackman'
          w = 0.42+0.5*cos((2*pi*k)/(N-1))+0.08*cos((4*pi*k)/(N-1));
        case 'blackman3'
          w = (0.42+0.5*cos((2*pi*k)/(N-1))+0.08*cos((4*pi*k)/(N-1))).^3;
        case 'lagrange'
          td = (N-1)/2+D;
          b1 = gamma(td+1)/(gamma(N+1)*gamma(td-N+1));
          b2 = gamma(N)./(gamma(k+(N-1)/2+1).*gamma(N-k-(N-1)/2));
          w = ((pi*N)/(sin(pi*td)))*b1*b2;
        otherwise
          error('Error: unknown window');
      end
    end
    
    % integer portion of delay
    Dint = round(D);
    
    % compute filter kernel
    h = sinc(D-Dint-k).*w;
    h = h/sum(h);
    
    % compute mean
    m = mean(y,1);
    
    % zero-pad
    S = size(y);
    z = [zeros(N,S(2)); y-ones(size(y,1),1)*m; zeros(N,S(2));];
    
    % perform fractional delay
    yd = filter(h,1,z);
    
    % add mean value back in
    yd = yd+ones(size(yd,1),1)*m;
    
    % pull out desired piece
    startIdx = N+(N-1)/2-Dint+1;
    stopIdx = startIdx+S(1)-1;
    yd = yd(startIdx:stopIdx,:);
  end
  
end

% default window coefficients for a 51-point Blackman^3 Window
function w = getDefaultWin()
  w = [ -2.672764710092196e-51,...
    2.919928497471517e-09,...
    1.964222233790207e-07,...
    2.421893320570441e-06,...
    1.509266915118367e-05,...
    6.502718623122716e-05,...
    2.218728571069196e-04,...
    6.426797900225642e-04,...
    1.644045563034309e-03,...
    3.804923035532534e-03,...
    8.092773520678435e-03,...
    1.598914727112911e-02,...
    2.957115614887005e-02,...
    5.148967744270461e-02,...
    8.478302990201238e-02,...
    1.324849728137687e-01,...
    1.970314272762810e-01,...
    2.795351879721982e-01,...
    3.790656272227905e-01,...
    4.921175703476021e-01,...
    6.124572264793214e-01,...
    7.314801524933086e-01,...
    8.391107707105823e-01,...
    9.251382368342529e-01,...
    9.807567812279478e-01,...
    9.999999999999997e-01,...
    9.807567812279478e-01,...
    9.251382368342529e-01,...
    8.391107707105823e-01,...
    7.314801524933086e-01,...
    6.124572264793214e-01,...
    4.921175703476021e-01,...
    3.790656272227905e-01,...
    2.795351879721982e-01,...
    1.970314272762810e-01,...
    1.324849728137687e-01,...
    8.478302990201238e-02,...
    5.148967744270461e-02,...
    2.957115614887005e-02,...
    1.598914727112911e-02,...
    8.092773520678435e-03,...
    3.804923035532534e-03,...
    1.644045563034309e-03,...
    6.426797900225642e-04,...
    2.218728571069196e-04,...
    6.502718623122716e-05,...
    1.509266915118367e-05,...
    2.421893320570441e-06,...
    1.964222233790207e-07,...
    2.919928497471517e-09,...
    -2.672764710092196e-51];
end